<div class="row justify-content-md-center">
  <div class="row col col-lg-12 col-md-12">
    <h1 class="p-3 pb-5">Generate Input and Test Load Balancing Algorithms</h1>
  </div>
  <div class="row col col-lg-12 col-md-12 pb-3">
    <div class="col col-lg-3 col-md-3">
      <button type="button" class="btn btn-outline-primary btn-lg" id="button-start-simulation">Start Simulation
      </button>
    </div>
    <div class="col col-lg-3 col-md-3"></div>
    <div class="col col-lg-3 col-md-3"></div>
    <div class="col col-lg-3 col-md-3"></div>
  </div>

  <div class="row col col-lg-12 col-md-12 pb-3">
    <div class="col col-lg-4 col-md-4">
      <label for="label-cluster">
        <h5>
          Load Balancing Algorithm
        </h5>
      </label>
      <%= select_tag :selector_algorithm, options_for_select(@algorithms), :class => "form-control", :include_blank => "Select one algorithm..." %>
    </div>
    <div class="col col-lg-8 col-md-8"></div>
  </div>

  <div class="row col col-lg-12 col-md-12">
    <div class="col col-lg-6 col-md-6">
      <label for="label-cluster">
        <h4>
          Cluster Description
        </h4>
      </label>

      <div id="jsoneditor-cluster" class="pt-3 pb-4" style="width: 100%; height: 200%;"></div>
    </div>

    <div class="col col-lg-6 col-md-6">
      <label for="label-jobs">
        <h4>
          Jobs Builder
        </h4>
      </label>

      <div id="jsoneditor-jobs" class="pt-3 pb-4" style="width: 100%; height: 200%;"></div>
    </div>

  </div>
</div>

<div id="loading-screen-animation" style="display: none">
  <canvas id="c"></canvas>
  <div class="info">Click to add gravity point.</div>
</div>


<script>
    let containerCluster = document.getElementById("jsoneditor-cluster");
    let contatinerJobs = document.getElementById("jsoneditor-jobs");
    let options = {
        mode: "code"
    };
    let editorCluster = new JSONEditor(containerCluster, options);
    let editorJobs = new JSONEditor(contatinerJobs, options);

    $(function () {
        const dummyClusterJsonUrl = "/dummy/cluster";
        const dummyJobsJsonUrl = "/dummy/jobs";

        axios.get(dummyClusterJsonUrl).then(function (response) {
            editorCluster.set(response.data);
        });

        axios.get(dummyJobsJsonUrl).then(function (response) {
            editorJobs.set(response.data);
        });
    });

    function callSimulation(url, clusterJson, jobsJson, selectedAlgorithm) {
        return axios
            .post(url, {
                payload_cluster: clusterJson,
                payload_jobs: jobsJson,
                simulated_algorithm: selectedAlgorithm
            })
            .then(function (response) {
                console.log(response);
                // stopLoadingScreenAnimation();
            })
            .catch(function (error) {
                // stopLoadingScreenAnimation();
                swal({
                    icon: "error",
                    text: "Error!"
                });
            });
    }

    $("#button-start-simulation").click(function () {
        let clusterJson = editorCluster.get();
        let jobsJson = editorJobs.get();
        let selectedAlgorithm = $("#selector_algorithm :selected").val();

        if (jQuery.isEmptyObject(clusterJson)) {
            swal({
                icon: "error",
                text: "Please fill in cluster details."
            });
        } else if (jQuery.isEmptyObject(jobsJson)) {
            swal({
                icon: "error",
                text: "Please fill in task/job simulation details."
            });
        } else if (selectedAlgorithm === undefined || selectedAlgorithm === "") {
            swal({
                icon: "error",
                text: "Please selected one algorithm that should be tested."
            });
        } else {
            const postUrl = "/simulate";
            startLoadingScreenAnimation();
            
            callSimulation(postUrl, clusterJson, jobsJson, selectedAlgorithm).then(function (response) {
                stopLoadingScreenAnimation();
            }).catch(function (response) {
                stopLoadingScreenAnimation();
            });

        }
    });
</script>