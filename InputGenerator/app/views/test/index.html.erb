<div class="row justify-content-md-center">
  <div class="row">
    <h1 class="p-3 pb-5">Generate Input and Test Load Balancing Algorithms</h1>
  </div>
  <div class="col col-lg-12">
    <label for="label-cluster" class="pb-3">
      <h4>
        Cluster Description
      </h4>
    </label>

    <div
      id="jsoneditor-cluster"
      class="pt-3 pb-4"
      style="width: 100%; height: 100%;"
    ></div>
  </div>
  <div class="col col-lg-12 pt-5">
    <label for="label-jobs" class="pb-3">
      <h4>
        Jobs Builder
      </h4>
    </label>

    <div
      id="jsoneditor-jobs"
      class="pt-3 pb-4"
      style="width: 100%; height: 200%;"
    ></div>
  </div>
</div>

<script>
  let containerCluster = document.getElementById("jsoneditor-cluster");
  let contatinerJobs = document.getElementById("jsoneditor-jobs");
  let options = {
    mode: "code"
  };
  let editorCluster = new JSONEditor(containerCluster, options);
  let editorJobs = new JSONEditor(contatinerJobs, options);

  $(function() {
    const dummyClusterJsonUrl = "/dummy/cluster";
    const dummyJobsJsonUrl = "/dummy/jobs";

    axios.get(dummyClusterJsonUrl).then(function(response) {
      editorCluster.set(response.data);
    });

    axios.get(dummyJobsJsonUrl).then(function(response) {
      editorJobs.set(response.data);
    });
  });

  $("#button-run").click(function() {
    var inputJson = editorCluster.get();
    if (jQuery.isEmptyObject(inputJson)) {
      swal({
        icon: "error",
        text: "Can't run a simulation without input."
      });
    } else {
      const postUrl = "/simulate";
      axios
        .post(postUrl, {
          payload: inputJson
        })
        .then(function(response) {
          console.log(response);
        })
        .catch(function(error) {
          swal({
            icon: "error",
            text: "Error!"
          });
        });
    }
  });
</script>
